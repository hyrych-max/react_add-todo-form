{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoInfo","todo","title","completed","userId","todoUser","usersFromServer","find","classNames","TodoList","todos","map","App","useState","todosFromServer","setTodos","setTitle","setUserId","titleNotFound","setTitleNotFound","userNotSelected","setUserNotSelected","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodo","Math","max","prevTodo","htmlFor","type","placeholder","onChange","filteredTitle","target","value","replace","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d78baac.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const todoUser = usersFromServer.find(\n    user => user.id === userId,\n  ) || null;\n\n  return (\n    <article\n      data-id={id}\n      key={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {todoUser && (<UserInfo user={todoUser} />)}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [titleNotFound, setTitleNotFound] = useState(false);\n  const [userNotSelected, setUserNotSelected] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filteredTitle = event.target.value.replace(\n      /[^a-zA-Zа-яА-Я0-9\\s]/g, '',\n    );\n\n    setTitleNotFound(!filteredTitle.trim());\n    setTitle(filteredTitle);\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserNotSelected(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    setTitleNotFound(!trimmedTitle);\n    setUserNotSelected(!userId);\n\n    if (!trimmedTitle || !userId) {\n      return;\n    }\n\n    const newId = Math.max(...todos.map(todo => todo.id + 1));\n\n    const newTodo = {\n      id: newId,\n      title: trimmedTitle,\n      completed: false,\n      userId,\n    };\n\n    setTodos(prevTodo => [...prevTodo, newTodo]);\n\n    reset();\n  };\n\n  return (\n    <div className=\"App section box\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n        className=\"form\"\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n            className=\"title is-5\"\n          >\n            Title:\n          </label>\n          <input\n            className=\"input is-medium\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter the title\"\n            onChange={handleTitle}\n            value={title}\n          />\n\n          {titleNotFound && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"user\"\n            className=\"title is-5\"\n          >\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            className=\"select is-info\"\n            onChange={handleUserSelect}\n            value={userId}\n          >\n            <option value=\"0\" disabled selected>\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userNotSelected && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-primary\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport 'bulma';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}